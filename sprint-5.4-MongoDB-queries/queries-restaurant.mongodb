// Tenim una col·lecció d'Objectes Restaurant a la ciutat de Nueva York, i necessitem algunes consultes.... pots ajudar-nos?
use('restaurants');

//1º- Escriu una consulta per mostrar tots els documents en la col·lecció Restaurants.
db.restaurants.find();

//2º- Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine per tots els documents en la col·lecció Restaurants.
db.restaurants.find({},{restaurant_id:1, name:1, borough:1, cuisine:1});

//3º- Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine, però excloure el camp _id per tots els documents en la col·lecció Restaurants.
db.restaurants.find({},{_id:0, restaurant_id:1, name:1, borough:1, cuisine:1});

//4º- Escriu una consulta per mostrar restaurant_id, name, borough i zip code, però excloure el camp _id per tots els documents en la col·lecció Restaurants.
db.restaurants.find({},{_id:0, restaurant_id:1, name:1, borough:1, "address.zipcode":1});

//5º- Escriu una consulta per mostrar tot els restaurants que estan en el Bronx
db.restaurants.find({borough:"Bronx"});

//6º- Escriu una consulta per mostrar els primers 5 restaurants que estan en el Bronx.
db.restaurants.find({borough:"Bronx"}).limit(5);

//7º- Escriu una consulta per mostrar el pròxim 5 restaurants després de saltar els primers 5 del Bronx.
db.restaurants.find({borough:"Bronx"}).limit(5).skip(5);

//8º- Escriu una consulta per trobar els restaurants que tenen un score de més de 90.
db.restaurants.find({ "grades.score": { $gte: 90 } });

//9º- Escriu una consulta per trobar els restaurants que tenen un score de més que 80 però menys que 100.
db.restaurants.find(({grades: {$elemMatch:{score: {$gt:80, $lt:100}}}}));

//10º- Escriu una consulta per trobar els restaurants quins localitzen en valor de latitud menys que -95.754168.
db.restaurants.find({ "address.coord.0": {$lt: -95.754168} });

//11º- Escriu una consulta de MongoDB per a trobar els restaurants que no preparen cap cuisine de 'American' i el seu puntaje de qualificació superior a 70 i latitud inferior a -65.754168.
db.restaurants.find({$and: [{cuisine: {$not: {$regex:/American\s/}}}, {grades:{$elemMatch:{score:{$gt:70}}}}, {"address.coord.0" : {$lt : -65.754168}}]});

//12º- Escriu una consulta per trobar els restaurants quins no preparen cap cuisine de 'American' i va aconseguir un marcador més que 70 i localitzat en la longitud menys que -65.754168. Nota : Fes aquesta consulta sense utilitzar $and operador.
db.restaurants.find({$nor: [{cuisine: {$regex:/American\s/} }, {grades:{$not:{$elemMatch:{score:{$gt:70}}}}}, {"address.coord.0" : {$gt : -65.754168}}]});

//13º- Escriu una consulta per trobar els restaurants quins no preparen cap cuisine de 'American ' i va aconseguir un punt de grau 'A' no pertany a Brooklyn. S'ha de mostrar el document segons la cuisine en ordre descendent.
db.restaurants.find({$and: [{cuisine: {$not: {$regex:/American\s/}}}, {"grades.grade": "A"}, {borough: { $ne: "Brooklyn" }}]}).sort({cuisine: -1});

//14º- Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants quin contenir 'Wil' com les tres primeres lletres en el seu nom.
db.restaurants.find({name: {$regex: /^Wil/}}, {restaurant_id: 1, name: 1, cuisine: 1 });

//15º- Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants quin contenir 'ces' com les últim tres lletres en el seu nom.
db.restaurants.find({name: {$regex: /ces$/}}, {restaurant_id: 1, name: 1, cuisine: 1 });

//16º- Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants quin contenir 'Reg' com tres lletres en algun lloc en el seu nom.
db.restaurants.find({name: {$regex: /Reg/i}}, {restaurant_id: 1, name: 1, cuisine: 1 });

//17º- Escriu una consulta per trobar els restaurants quins pertanyen al Bronx i va preparar qualsevol plat American o xinès.
db.restaurants.find({$and: [{borough: "Bronx"}, {$or:[{cuisine: {$regex:/American\s/}}, {cuisine:"Chinese"}]} ]});

//18º- Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que pertanyen a Staten Island o Queens o Bronx  Brooklyn.
db.restaurants.find({$or: [{borough: "Staten Island"}, {borough: "Queens"}, {borough: "Bronx"}, {borough: "Brooklyn"}]}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1 });

//19º- Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que no pertanyen a Staten Island o Queens o Bronx o Brooklyn.
db.restaurants.find({$nor: [{borough: "Staten Island"}, {borough: "Queens"}, {borough: "Bronx"}, {borough: "Brooklyn"}]}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1 });

//20º- Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que aconsegueixin un marcador quin no és més que 10.
db.restaurants.find({"grades.0.score": { $lte: 10 }}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1 });

//21º- Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que preparen marisc ('seafood') excepte 'American' i 'Chinese' o el name del restaurant comença amb lletres 'Wil'.
db.restaurants.find({$and: [{cuisine: { $ne: "American " }}, {cuisine: { $ne: "Chinese" }}, {$or:[{name: {$regex: /fish/i}},{name: {$regex: /^Wil/i}}]} ] }, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1 });

//22º- Escriu una consulta per trobar el restaurant_id, name, i grades per a aquells restaurants que aconsegueixin un grade de "A" i un score de 11 en dates d'estudi ISODate "2014-08-11T00:00:00Z".
db.restaurants.find({ grades: {$elemMatch: { score: 11, date: ISODate("2014-08-11T00:00:00Z") }}, "grades.grade": "A" }, { restaurant_id: 1, name: 1, grades: 1 });

//23º- Escriu una consulta per trobar el restaurant_id, name i grades per a aquells restaurants on el 2n element de l'array de graus conté un grade de "A" i un score 9 amb un ISODate "2014-08-11T00:00:00Z".
db.restaurants.find({ "grades.1.score": 9, "grades.1.date": ISODate("2014-08-11T00:00:00Z"), "grades.1.grade": "A" }, { restaurant_id: 1, name: 1, grades: 1 });

//24º- Escriu una consulta per trobar el restaurant_id, name, adreça i ubicació geogràfica per a aquells restaurants on el segon element del array coord conté un valor quin és més que 42 i fins a 52.
db.restaurants.find({$and:[{"address.coord.1":{$gt:42}}, {"address.coord.1":{$lte:52}}]}, {_id:0, restaurant_id: 1, name: 1, address: 1 });

//25º- Escriu una consulta per organitzar el nom dels restaurants en ordre ascendent juntament amb totes les columnes.
db.restaurants.find().sort({name: 1});

//26º- Escriu una consulta per organitzar el nom dels restaurants en descendir juntament amb totes les columnes.
db.restaurants.find().sort({name: -1});

//27º- Escriu una consulta a organitzar el nom de la cuisine en ordre ascendent i per el mateix barri de cuisine. Ordre descendent.
db.restaurants.find().sort({cuisine: 1, borough: -1});

//28º- Escriu una consulta per saber tant si totes les direccions contenen el carrer o no.
db.restaurants.find({"address.street": null }).count();

//29º- Escriu una consulta quin seleccionarà tots el documents en la col·lecció de restaurants on els valors del camp coord és Double.
db.restaurants.find({"address.coord": { $type: "double" } });

//30º- Escriu una consulta que seleccionarà el restaurant_id, name i grade per a aquells restaurants que retornen 0 com a residu després de dividir algun dels seus score per 7.
db.restaurants.find({"grades.0.score": {$mod: [7, 0] }}, { restaurant_id: 1, name: 1, grades: 1 });

//31º- Escriu una consulta per trobar el name de restaurant, borough, longitud i altitud i cuisine per a aquells restaurants que contenen 'mon' com tres lletres en algun lloc del seu name.
db.restaurants.find({name: { $regex: /mon/i } }, {name: 1, borough: 1, "address.coord": 1, cuisine: 1});

//32- Escriu una consulta per trobar el name de restaurant, borough, longitud i latitud i cuisine per a aquells restaurants que conteinen 'Mad' com primeres tres lletres del seu name.
db.restaurants.find({name: { $regex: /^Mad/i } }, {name: 1, borough: 1, "address.coord": 1, cuisine: 1});